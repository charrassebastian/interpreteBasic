; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /home/sebastian/Projects/interpreteBasic/interprete ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless ; popd
; Using host:port 127.0.0.1:42953 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉interprete.interprete꞉>  ; Use `alt+enter` to evaluate
clj꞉interprete.interprete꞉> 
; Jack-in done.
clj꞉interprete.interprete꞉> 
; Evaluating file: core_test.clj
#'interprete.core-test/aplicar-tests
clj꞉interprete.core-test꞉> 
; Running all project tests…
; FAIL in interprete.core-test/aplicar-tests (core_test.clj:408):
; aplicar MID$ debe retornar una subcadena desde el numero de caracter indicado
; expected:
(= "OLA" (aplicar 'MID$ "HOLA" 1 1))

; actual:
(not (= "OLA" "HOLA"))

; 237 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 25
clj꞉interprete.core-test꞉> 
; Evaluating file: core_test.clj
#'interprete.core-test/aplicar-tests
clj꞉interprete.core-test꞉> 
; Running all project tests…
; 237 tests finished, all passing 👍, ns: 1, vars: 25
clj꞉interprete.core-test꞉> 
; Evaluating file: core_test.clj
#'interprete.core-test/aplicar-tests
clj꞉interprete.core-test꞉> 
; Running all project tests…
; ERROR in interprete.core-test/aplicar-tests (interprete.clj:411):
; aplicar MID3$ debe retornar nil si el numero de caracter inicial es menor a 1
; error: java.lang.IllegalArgumentException: No matching clause: MID3$ (interprete.clj:411)
; expected:
(nil? (aplicar 'MID3$ "HOLA" 0 1))

; ERROR in interprete.core-test/aplicar-tests (interprete.clj:413):
; aplicar MID3$ debe retornar nil si el numero de caracteres a retornar es menor a 0
; error: java.lang.IllegalArgumentException: No matching clause: MID3$ (interprete.clj:413)
; expected:
(nil? (aplicar 'MID3$ "HOLA" 1 -1))

; ERROR in interprete.core-test/aplicar-tests (interprete.clj:415):
; aplicar MID3$ debe retornal una subcadena desde el numero de caracter inicial indicado y con la cantidad de caracteres indicada
; error: java.lang.IllegalArgumentException: No matching clause: MID3$ (interprete.clj:415)
; expected:
(= "OL" (aplicar 'MID3$ "HOLA" 2 2))

; 240 tests finished, problems found. 😭 errors: 3, failures: 0, ns: 1, vars: 25
clj꞉interprete.core-test꞉> 
; Evaluating file: core_test.clj
#'interprete.core-test/aplicar-tests
clj꞉interprete.core-test꞉> 
; Running all project tests…
; 240 tests finished, all passing 👍, ns: 1, vars: 25
clj꞉interprete.core-test꞉> 
; Evaluating file: core_test.clj
#'interprete.core-test/aplicar-tests
clj꞉interprete.core-test꞉> 
; Running all project tests…
; 240 tests finished, all passing 👍, ns: 1, vars: 25
clj꞉interprete.core-test꞉> 
