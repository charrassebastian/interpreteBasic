; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd c:\Users\sebas\Projects\interpreteBasic\interprete & cmd.exe /d /c lein update-in :dependencies conj [nrepl,"1.0.0"] -- update-in :plugins conj [cider/cider-nrepl,"0.28.5"] -- update-in [:repl-options,:nrepl-middleware] conj '["cider.nrepl/cider-middleware"]' -- repl :headless & popd
; Using host:port 127.0.0.1:64043 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉interprete.interprete꞉>  ; Use `alt+enter` to evaluate
clj꞉interprete.interprete꞉> 
; Jack-in done.
clj꞉interprete.interprete꞉> 
; Evaluating file: interprete.clj
true
clj꞉interprete.interprete꞉> 
; Evaluating file: core_test.clj
#'interprete.core-test/flatten-primer-nivel-tests
clj꞉interprete.core-test꞉> 
; Running all project tests…
sentencia: (IF X & * Y < 12 THEN LET ! X = 0)
e: IF
e: X
x: X
e: &
x: &
e: *
e: Y
x: Y
e: <
e: 12
e: THEN
e: LET
e: !
x: !
e: X
x: X
e: =
e: 0
sentencia: (PRINT 5)
e: PRINT
e: 5
sentencia: (LET P = .)
e: LET
e: P
x: P
e: =
e: .
x: .
sentencia: (PRINT "HOLA")
e: PRINT
e: "HOLA"
sentencia: (LET X = LEN ( "HOLA" ))
e: LET
e: X
x: X
e: =
e: LEN
e: (
x: (
e: "HOLA"
e: )
x: )
?RETURN WITHOUT GOSUB  ERROR IN 20x: Z$
x: Z
?TYPE MISMATCH  ERROR IN 1?ILLEGAL QUANTITY  ERROR IN 1?ILLEGAL QUANTITY  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?DIVISION BY ZERO  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?ILLEGAL QUANTITY  ERROR IN 1?ILLEGAL QUANTITY  ERROR IN 1?ILLEGAL QUANTITY  ERROR IN 1x: X
x: X%
x: X$
x: X1
; 271 tests finished, all passing 👍, ns: 1, vars: 27
clj꞉interprete.core-test꞉> 
sentencia: (FOR I = 1 TO L)
e: FOR
e: I
x: I
e: =
e: 1
e: TO
e: L
x: L
x: I
x: L
sentencia: (PRINT MID$ (N$ , I))
e: PRINT
e: MID$
e: (N$ , I)
x: (N$ , I)
; Execution error (ClassCastException) at interprete.interprete/variable-integer? (interprete.clj:880).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.Named (clojure.lang.PersistentList and clojure.lang.Named are in unnamed module of loader 'app')
clj꞉interprete.core-test꞉> 
; Evaluating file: interprete.clj
true
clj꞉interprete.interprete꞉> 
; Evaluating file: core_test.clj
sentencia: (FOR I = 1 TO L)
e: FOR
e: I
x: I
e: =
e: 1
e: TO
e: L
x: L
x: I
x: L
sentencia: (PRINT MID$ (N$ , I))
e: PRINT
e: MID$
e: (N$ , I)
x: (N$ , I)
; Syntax error (ClassCastException) compiling at (core_test.clj:490:1).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.Named (clojure.lang.PersistentList and clojure.lang.Named are in unnamed module of loader 'app')
; Evaluation of file core_test.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉interprete.core-test꞉> 
; Evaluating file: core_test.clj
sentencia: (FOR I = 1 TO L)
e: FOR
e: I
x: I
e: =
e: 1
e: TO
e: L
x: L
x: I
x: L
sentencia: (PRINT MID$ (N$ , I))
e: PRINT
e: MID$
e: (N$ , I)
x: (N$ , I)
; Syntax error (ClassCastException) compiling at (core_test.clj:490:1).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.Named (clojure.lang.PersistentList and clojure.lang.Named are in unnamed module of loader 'app')
; Evaluation of file core_test.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉interprete.core-test꞉> 
sentencia: (FOR I = 1 TO L)
e: FOR
e: I
x: I
e: =
e: 1
e: TO
e: L
x: L
x: I
x: L
sentencia: (PRINT MID$ (N$ , I))
e: PRINT
e: MID$
e: (N$ , I)
x: (N$ , I)
; Execution error (ClassCastException) at interprete.interprete/anular-invalidos$fn (interprete.clj:755).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.Named (clojure.lang.PersistentList and clojure.lang.Named are in unnamed module of loader 'app')
clj꞉interprete.core-test꞉> 
"()"
clj꞉interprete.interprete꞉> 
; Evaluating file: interprete.clj
true
clj꞉interprete.interprete꞉> 
sentencia: (FOR I = 1 TO L)
e: FOR
e: I
x: I
e: =
e: 1
e: TO
e: L
x: L
x: I
x: L
sentencia: (PRINT MID$ (N$ , I))
e: PRINT
e: MID$
e: (N$ , I)
x: (N$ , I)
?SYNTAX  ERROR IN 50[nil
 [((40 (FOR I = 1 TO L))
   (50 (PRINT MID$ (N$ , I)))
   (60 (NEXT I))
   (70 (FOR I = L TO 1 STEP - 1))
   (80 (PRINT MID$ (N$ , I)))
   (90 (NEXT I))
   (100 (PRINT) (PRINT "GOODBYE " ; N$)))
  [50 1]
  []
  [[I 0 1 [40 1]]]
  []
  0
  {I 1}]]
clj꞉interprete.core-test꞉> 
; Evaluating file: interprete.clj
true
clj꞉interprete.interprete꞉> 
; Evaluating file: core_test.clj
#'interprete.core-test/flatten-primer-nivel-tests
clj꞉interprete.core-test꞉> 
; Running all project tests…
?RETURN WITHOUT GOSUB  ERROR IN 20?TYPE MISMATCH  ERROR IN 1?ILLEGAL QUANTITY  ERROR IN 1?ILLEGAL QUANTITY  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?DIVISION BY ZERO  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?TYPE MISMATCH  ERROR IN 1?ILLEGAL QUANTITY  ERROR IN 1?ILLEGAL QUANTITY  ERROR IN 1?ILLEGAL QUANTITY  ERROR IN 1; 271 tests finished, all passing 👍, ns: 1, vars: 27
clj꞉interprete.core-test꞉> 
